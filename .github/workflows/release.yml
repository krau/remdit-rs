name: Build and Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install musl tools (for musl targets)
        if: contains(matrix.target, 'musl')
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          BIN_NAME=remdit
          OUT_DIR=dist
          mkdir -p $OUT_DIR
          BIN_PATH=target/${{ matrix.target }}/release/$BIN_NAME

          if [[ "${{ matrix.target }}" == *windows* ]]; then
            zip -j "$OUT_DIR/${BIN_NAME}-${{ matrix.target }}.zip" "$BIN_PATH.exe"
          else
            tar czf "$OUT_DIR/${BIN_NAME}-${{ matrix.target }}.tar.gz" -C target/${{ matrix.target }}/release $BIN_NAME
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.target }}
          path: dist/*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: List files for debug
        run: ls -R dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
